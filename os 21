
#include<stdio.h>
// Structure to represent a memory block
struct MemoryBlock {
    int id;
    int size;
    int allocated;
};

// Function to allocate memory using worst fit algorithm
void worstFit(struct MemoryBlock memory[], int numBlocks, int processSize) {
    int worstFitIdx = -1;
    
    for (int i = 0; i < numBlocks; i++) {
        if (!memory[i].allocated && memory[i].size >= processSize) {
            if (worstFitIdx == -1 || memory[i].size > memory[worstFitIdx].size) {
                worstFitIdx = i;
            }
        }
    }
    
    if (worstFitIdx != -1) {
        memory[worstFitIdx].allocated = 1;
        printf("Process allocated to memory block %d\n", memory[worstFitIdx].id);
    } else {
        printf("No suitable memory block found for the process.\n");
    }
}

int main() {
    int numBlocks, processSize;
    
    printf("Enter the number of memory blocks: ");
    scanf("%d", &numBlocks);
    
    struct MemoryBlock memory[numBlocks];
    
    for (int i = 0; i < numBlocks; i++) {
        printf("Enter the size of memory block %d: ", i + 1);
        scanf("%d", &memory[i].size);
        memory[i].id = i + 1;
        memory[i].allocated = 0;
    }
    
    printf("Enter the size of the process: ");
    scanf("%d", &processSize);
    
    worstFit(memory, numBlocks, processSize);
    
    return 0;
}
